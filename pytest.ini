[pytest]
# Pytest configuration file

# Minimum Python version
minversion = 8.0

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Asyncio mode - use auto to prevent event loop issues
asyncio_mode = auto

# Markers for test categorization
markers =
    unit: Unit tests - single layer isolation with mocks
    integration: Integration tests - multiple layers with partial mocking
    e2e: End-to-end tests - complete flow through all layers
    slow: Tests that take a long time to run
    database: Tests that interact with database
    api: Tests that interact with API endpoints

# Test path configuration
testpaths = tests

# Ignore patterns
norecursedirs =
    .git
    .venv
    venv
    __pycache__
    .pytest_cache
    .tox
    build
    dist
    *.egg-info

# Output options
# Show extra test summary
addopts =
    -ra
    --strict-markers
    --tb=short
    -v

# Log level for debugging
log_cli = false
log_cli_level = INFO

# Console output
console_output_style = progress

# Timeout for tests (optional - requires pytest-timeout)
# timeout = 10

# Coverage options
[coverage:run]
branch = True
omit =
    */tests/*
    */test_*.py
    setup.py

[coverage:report]
# Exclude lines from coverage
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod

# Precision
precision = 2

# Show missing
show_missing = True

# Disable HTML report to avoid pytest-cov hang
[coverage:html]
directory = coverage_html
